name: CI Build and Lint
on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - docs/**
      - README.md
      - .gitignore
      - vcpkg/**
      - assets/**
      - cmake/**
      - scripts/**
      - shaders/**
  push:
    branches:
      - main
    paths-ignore:
      - docs/**
      - README.md
      - .gitignore
      - vcpkg/**
      - assets/**
      - cmake/**
      - scripts/**
      - shaders/**

jobs:
  lint:
    name: Code Analysis & Formatting (Ubuntu)
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup CMake
        uses: lukka/get-cmake@latest

      - name: Restore vcpkg cache and setup environment
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgJsonGlob: 'vcpkg.json'

      - name: Configure project (Linux Debug - generates compile_commands.json)
        run: |
          cmake --preset lx64-debug

      - name: Run C++ Linter
        uses: cpp-linter/cpp-linter-action@v2
        id: linter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: '19'
          style: 'file'
          extensions: "cpp,hpp,h,cc,hh,cxx,hxx"
          database: 'out/build/lx64-debug'
          ignore: 'out|.github|vcpkg|assets|cmake|scripts|shaders'
          extra-args: '-std=c++23'
          files-changed-only: ${{ github.event_name == 'pull_request' }}
          thread-comments: ${{ github.event_name == 'pull_request' && 'update' }}
          format-review: 'true'
          tidy-review: 'true'
          step-summary: 'true'
          no-lgtm: 'false'

      - name: Check Linter Results
        if: steps.linter.outputs.checks-failed > 0
        run: |
          echo "cpp-linter found issues."
          exit 1

  build_linux_debug:
    name: Build (Linux Debug)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup CMake
        uses: lukka/get-cmake@latest

      - name: Restore vcpkg cache and setup environment
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgJsonGlob: 'vcpkg.json'

      - name: Run CMake Build Workflow (Linux Debug)
        run: |
          cmake --workflow --preset build-test-linux-debug

  build_windows_debug:
    name: Build (Windows Debug)
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup CMake
        uses: lukka/get-cmake@latest

      - name: Restore vcpkg cache and setup environment
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgJsonGlob: 'vcpkg.json'

      - name: Run CMake Build Workflow (Windows Debug)
        run: |
          cmake --workflow --preset build-test-windows-debug